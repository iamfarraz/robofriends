{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","cur_robo","ind","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchFeild","target","value","state","console","log","fetch","then","res","json","user","this","filteredRobots","filter","cur","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAYeA,EAXJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,GAAGC,EAAc,EAAdA,KAAKC,EAAS,EAATA,MACjB,OACI,sBAAKC,UAAU,mDAAf,UACA,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,aACpD,6BAAKJ,IACL,4BAAIC,QCgBGI,EApBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAGd,OACI,8BAEDA,EAAOC,KAAK,SAACC,EAASC,GAErB,OAAQ,cAAC,EAAD,CAERV,GAAIS,EAAST,GACbC,KAAMQ,EAASR,KACfC,MAAOO,EAASP,OAHXQ,SCGEC,EAdC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACd,OACJ,qBAAKT,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVU,KAAK,SACJC,YAAY,kBACbC,SAAUH,OCECI,EATD,SAACC,GACX,OAEI,aADA,CACA,OAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCmDJC,G,wDAhDX,aAAc,IAAD,8BACT,gBAmBJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAnBxC,EAAKC,MAAM,CACP,OAAS,GACTH,YAAY,IAEhBI,QAAQC,IAAI,eANH,E,qDAUb,WAAoB,IAAD,OAEnBC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GAAD,OAAQ,EAAKX,SAAS,CAACnB,OAAO8B,S,oBAUpC,WACIN,QAAQC,IAAI,UADR,MAEuBM,KAAKR,MAAzBvB,EAFH,EAEGA,OAAOoB,EAFV,EAEUA,YACRY,EAAehC,EAAOiC,QAAO,SAACC,GACrC,OAAOA,EAAIxC,KAAKyC,cAAcC,SAAShB,EAAYe,kBAElD,OAAmB,IAAhBnC,EAAOqC,OACC,yCAIP,sBAAKzC,UAAU,MAAf,UACH,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,aAAc0B,KAAKd,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQgC,a,GAxCTM,IAAMC,YCMTC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACN,cAAC,EAAD,IAAQC,SAASC,eAAe,SAGnCX,M","file":"static/js/main.cecae194.chunk.js","sourcesContent":["\nconst Card=({id,name,email})=>{\n    return (\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n        <img src={`https://robohash.org/${id}?200x200`} alt=\"robo_img\"/>\n        <h2>{name}</h2>\n        <p>{email}</p>\n        \n        </div>\n    );\n}\n\nexport default Card;","import Card from './Card'\n\nconst CardList= ({robots})=>{\n    // when itrate their should be unique key prop(parameter)\n\n    return(\n        <div>\n       {\n       robots.map(((cur_robo,ind)=>\n       {\n        return (<Card \n        key={ind} \n        id={cur_robo.id} \n        name={cur_robo.name} \n        email={cur_robo.email} \n        />)\n       }\n        ))\n       }\n        </div>\n    )\n}\nexport default CardList;","const SearchBox=({searchChange})=>{\n    return (\n<div className=\"pa2\">\n    <input \n    className=\"pa3 ba b--green bg-lightest-blue\" \n    type=\"serach\"\n     placeholder=\"Enter Robo Name\"\n    onChange={searchChange}\n    />\n\n    \n</div>\n    )\n}\nexport default SearchBox;","const Scroll =(props)=>{\n    return (\n        // We can do this by css but we doin this way\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n \n    )\n}\nexport default Scroll;","import React from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport './App.css'\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            'robots':[],\n            searchFeild:''\n        }\n        console.log(\"constructor\")\n    }\n    //not a user defined method so simply use it\n   \n    componentDidMount(){\n   \n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((res)=>res.json())\n    .then((user)=>this.setState({robots:user}));\n    // const res=await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    // const data= res.json()\n    // this.setState({robots:data})\n    }\n\n    onSearchChange=(event)=>{\n        this.setState({searchFeild:event.target.value})\n     }\n\n    render(){\n        console.log(\"render\");\n        const {robots,searchFeild}=this.state;\n        const filteredRobots=robots.filter((cur)=>{\n       return cur.name.toLowerCase().includes(searchFeild.toLowerCase());\n        }) \n        if(robots.length===0){\n          return   <h1>Loading</h1>\n        }\n        else {\n return (\n            <div className=\"tc \">\n         <h1 className=\"f1\">Robo-Friends</h1>\n         <SearchBox searchChange={this.onSearchChange}/>\n         <Scroll>\n         <CardList robots={filteredRobots}/>\n         </Scroll>\n            </div>\n      );\n        }\n     \n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App'\nimport 'tachyons'; \nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n   <App/> ,document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}